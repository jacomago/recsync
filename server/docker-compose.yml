version: '3'

services:
  cf:
    build: ./docker/cf
    image: cf
    hostname: cf
    networks:
      - net-cf
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      elasticsearch:
        condition: service_healthy
        restart: true
    environment:
      ELASTICSEARCH_NETWORK_HOST: elasticsearch-cf
      demo_auth.enabled: true
      demo_auth.users: admin
      demo_auth.pwds: password
      demo_auth.roles: ADMIN
    healthcheck:
      test: curl -s -f http://cf:8080/ChannelFinder
      interval: 10s
      timeout: 60s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    hostname: elasticsearch-cf
    networks:
      - net-cf
    environment:
      cluster.name: channelfinder
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
    healthcheck:
      test: curl -s -f http://localhost:9200/_cluster/health
      interval: 10s
      timeout: 60s
      retries: 5
    volumes:
      - channelfinder-es-data:/usr/share/elasticsearch/data
  
  recc1:
    build: .
    networks:
      - net-recc-1
      - net-cf
    depends_on:
      cf:
        condition: service_healthy
        restart: true
    volumes: 
      - type: bind
        source: cf1.conf
        target: /home/recceiver/cf.conf
        read_only: true
      - type: bind
        source: cf1.conf
        target: /home/recceiver/channelfinderapi.conf
        read_only: true
  recc2:
    build: .
    networks:
      - net-recc-2
      - net-cf
    depends_on:
      cf:
        condition: service_healthy
        restart: true
    volumes: 
      - type: bind
        source: cf2.conf
        target: /home/recceiver/cf.conf
        read_only: true
      - type: bind
        source: cf2.conf
        target: /home/recceiver/channelfinderapi.conf
        read_only: true

volumes:
  channelfinder-es-data:
    driver: local

networks:
  net-cf:
    driver: bridge
  net-recc-1:
    driver: bridge
  net-recc-2:
    driver: bridge